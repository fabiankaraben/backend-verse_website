{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/arrays/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"3a368c19-ab9f-599a-b9d8-d74c20e170ab","excerpt":"Array represents a fixed size, named sequence of elements of the same type. You cannot have an array which contains both integer and characters in it. Youâ€¦","html":"<p>Array represents a fixed size, named sequence of elements of the same type.</p>\n<p>You cannot have an array which contains both integer and characters in it.</p>\n<p>You cannot change the size of an array once You define the size.</p>\n<p>The syntax for declaring an array is:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">var</span> arrayname <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span></code></pre></div>\n<p>Each array element can be assigned value using the syntax</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">arrayname<span class=\"token punctuation\">[</span>index<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> value</code></pre></div>\n<p>Array index starts from <code class=\"language-text\">0</code> to <code class=\"language-text\">size - 1</code>.</p>\n<p>You can assign values to array elements during declaration using the syntax</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">arrayname <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span>size<span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">{</span>value_0<span class=\"token punctuation\">,</span> value_1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> value_size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can also ignore the size parameter while declaring the array with values by replacing size with <code class=\"language-text\">...</code> and the compiler will find the length from the number of values. Syntax is:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">arrayname <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">{</span>value_0<span class=\"token punctuation\">,</span> value_1<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span><span class=\"token punctuation\">,</span> value_size<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can find the length of the array by using the syntax <code class=\"language-text\">len(arrayname)</code>.</p>\n<p>Execute the below example to understand the array</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Declaring a string array of size 3 and adding elements</span>\n\t<span class=\"token keyword\">var</span> numbers <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span>\n\tnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"One\"</span>\n\tnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Two\"</span>\n\tnumbers<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Three\"</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">// Prints Two</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Prints 3</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>numbers<span class=\"token punctuation\">)</span>      <span class=\"token comment\">// Prints [One Two Three]</span>\n\n\t<span class=\"token comment\">// Creating an integer array and the size of the array is defined by the number of elements</span>\n\tdirections <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>directions<span class=\"token punctuation\">)</span>      <span class=\"token comment\">// Prints [1 2 3 4 5]</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>directions<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Prints 5</span>\n\n\t<span class=\"token comment\">// Executing the below commented statement prints invalid array index 5 (out of bounds for 5-element array)</span>\n\t<span class=\"token comment\">//fmt.Println(directions[5])</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Two\n3\n[One Two Three]\n[1 2 3 4 5]\n5</code></pre></div>","frontmatter":{"title":"Arrays","date":"November 02, 2021","description":"Arrays in Go?"}},"previous":{"fields":{"slug":"/golang/switch/"},"frontmatter":{"title":"Switch"}},"next":{"fields":{"slug":"/golang/slices/"},"frontmatter":{"title":"Slices"}}},"pageContext":{"id":"3a368c19-ab9f-599a-b9d8-d74c20e170ab","previousPostId":"a40ddcb0-0611-5e46-be26-7bb8df94fcc4","nextPostId":"1ebd6a32-35c9-58d8-aaca-6013b05615da"}},
    "staticQueryHashes": ["2841359383"]}