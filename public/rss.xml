<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Backend-Verse RSS Feed]]></title><description><![CDATA[Analysis of the multiverse of backend programming languages.]]></description><link>https://backend-verse.com</link><generator>GatsbyJS</generator><lastBuildDate>Fri, 10 Dec 2021 08:15:47 GMT</lastBuildDate><item><title><![CDATA[My Git Notes, Concepts and Commands]]></title><description><![CDATA[Introduction Learning Git is essential in software development, no matter what technology you use, or if you work individually or in a group…]]></description><link>https://backend-verse.com/notes/git/</link><guid isPermaLink="false">https://backend-verse.com/notes/git/</guid><pubDate>Thu, 02 Dec 2021 22:12:03 GMT</pubDate><content:encoded>&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Learning Git is essential in software development, no matter what technology you use, or if you work individually or in a group.&lt;/p&gt;
&lt;p&gt;Usually Git works in a formidable way if it is code oriented, because Git will be able to analyze the files, determine what changed, do code joins, and everything automatically.&lt;/p&gt;
&lt;p&gt;Now, there is going to be a point where Git will not be able to do it automatically, as when two people touch the same code, a conflict occurs and in those cases Git needs that conflict to be resolved manually.&lt;/p&gt;
&lt;p&gt;Facing conflicts is normal, there is no need to panic, and there are even techniques to avoid having a large number of conflicts.&lt;/p&gt;
&lt;p&gt;We will only see the use of Git through the console command, in order to cover all the necessary concepts, then with that information learned it is easy for everyone to choose the graphical Git repository manager that they like the most.&lt;/p&gt;
&lt;h2&gt;Concepts&lt;/h2&gt;
&lt;h3&gt;Repository&lt;/h3&gt;
&lt;p&gt;It is the name that Git gives to each code project, although a repository can store any type of content, not just programming code.&lt;/p&gt;
&lt;h3&gt;Stage&lt;/h3&gt;
&lt;p&gt;Initially a repository has all its files untracked. Later we can add one, several or all the files to the “Stage” which we could understand with the analogy of a stage where a photo is going to be taken. We upload files to the stage (adding it to the stage) and then we take the picture (make a commit).&lt;/p&gt;
&lt;h3&gt;Commit&lt;/h3&gt;
&lt;p&gt;Following the analogy of the concept of ‘Stage’, doing a commit is like taking a photo of all the files that are in the ‘stage’, that is, saving the current state of all those files and leaving it registered in the timeline of our Git repository.&lt;/p&gt;
&lt;h2&gt;Commands&lt;/h2&gt;
&lt;h4&gt;Know the installed version of Git&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git --version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;View the help content of the Git command&lt;/h4&gt;
&lt;p&gt;See general help:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git help&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See help for a specific subcommand:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git help commit&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Git initial setup&lt;/h4&gt;
&lt;p&gt;Configure the user’s name:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git config --global user.name = &quot;Fabian Karaben&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure the user’s email:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git config --global user.email = &quot;fabian@example.com&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;View and optionally edit the current user settings:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git config --global -e&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Initialize a repository&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git init&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;View the repository status&lt;/h4&gt;
&lt;p&gt;This command displays information about commits, about the current branch, and more:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git status&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Add and remove files from the ‘stage’&lt;/h4&gt;
&lt;p&gt;Add a specific file to the stage:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git add index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add all files to the stage:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git add .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Remove a specific file from the stage:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git reset index.html&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Commits&lt;/h4&gt;
&lt;p&gt;Make a commit&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;git commit -m &quot;A descriptive message for this commit&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[What is Backend?]]></title><description><![CDATA[What is backend? Well first let’s talk about what is not backend, that is, let’s talk about what is frontend ?. Frontend is a layer in…]]></description><link>https://backend-verse.com/what-is/backend-development/</link><guid isPermaLink="false">https://backend-verse.com/what-is/backend-development/</guid><pubDate>Mon, 29 Nov 2021 22:12:03 GMT</pubDate><content:encoded>&lt;p&gt;What is backend?&lt;/p&gt;
&lt;p&gt;Well first let’s talk about what is not backend, that is, let’s talk about what is frontend ?.&lt;/p&gt;
&lt;p&gt;Frontend is a layer in software development, the layer of the graphical interface, that is, what the user sees, it can be a mobile app, a web page, to give some examples. On the other hand, backend is the service that runs on a server, what we normally call “the cloud”.&lt;/p&gt;
&lt;p&gt;The frontend makes requests to the backend. The backend receives a request, performs the necessary validations and processing, and returns a response to the frontend.&lt;/p&gt;
&lt;p&gt;Many times the backend work includes queries to a database.&lt;/p&gt;
&lt;p&gt;Backend development must be able to respond quickly to thousands or millions of frontend instances, so optimizing algorithms is very important.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[My Notes]]></title><description><![CDATA[My Git notes]]></description><link>https://backend-verse.com/notes/</link><guid isPermaLink="false">https://backend-verse.com/notes/</guid><pubDate>Thu, 04 Nov 2021 10:02:03 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/notes/git&quot;&gt;My Git notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[What is]]></title><description><![CDATA[What is Backend Development?]]></description><link>https://backend-verse.com/what-is/</link><guid isPermaLink="false">https://backend-verse.com/what-is/</guid><pubDate>Thu, 04 Nov 2021 10:02:03 GMT</pubDate><content:encoded>&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/what-is/backend-development&quot;&gt;What is Backend Development?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>