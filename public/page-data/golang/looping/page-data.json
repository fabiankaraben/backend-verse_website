{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/looping/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"348c3b82-f392-5eb3-a826-e6d3ac3ecaf3","excerpt":"Loops are used to execute a block of statements repeatedly based on a condition. Most of the programming languages provide 3 types of loops    But Go supports…","html":"<p>Loops are used to execute a block of statements repeatedly based on a condition.</p>\n<p>Most of the programming languages provide 3 types of loops</p>\n<ul>\n<li><code class=\"language-text\">for</code></li>\n<li><code class=\"language-text\">while</code></li>\n<li><code class=\"language-text\">do while</code></li>\n</ul>\n<p>But Go supports only <code class=\"language-text\">for</code> loop.</p>\n<p>The syntax of a <code class=\"language-text\">for</code> loop is</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">for</span> initialisation_expression<span class=\"token punctuation\">;</span> evaluation_expression<span class=\"token punctuation\">;</span> iteration_expression <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// one or more statement</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The <code class=\"language-text\">initialisation_expression</code> is executed first (and only once).</p>\n<p>Then the <code class=\"language-text\">evaluation_expression</code> is evaluated and if it’s <code class=\"language-text\">true</code> the code inside the block is executed.</p>\n<p>The <code class=\"language-text\">iteration_expression</code> is executed, and the evaluation_expression is evaluated again. If it’s <code class=\"language-text\">true</code> the statement block gets executed again.</p>\n<p>This will continue until the <code class=\"language-text\">evaluation_expression</code> becomes <code class=\"language-text\">false</code>.</p>\n<p>Copy the below program into a file and execute it to see the for loop printing numbers from 1 to 5</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> i <span class=\"token builtin\">int</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Output is</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1\n2\n3\n4\n5</code></pre></div>","frontmatter":{"title":"Looping","date":"November 01, 2021","description":"Looping in Go"}},"previous":{"fields":{"slug":"/golang/constants/"},"frontmatter":{"title":"Constants"}},"next":{"fields":{"slug":"/golang/if-else/"},"frontmatter":{"title":"If and Else"}}},"pageContext":{"id":"348c3b82-f392-5eb3-a826-e6d3ac3ecaf3","previousPostId":"a7e5a8b3-1d0a-5b6a-8e26-221ec8e001ae","nextPostId":"db5ee7ec-d16a-5d3b-9444-e183241d336d"}},
    "staticQueryHashes": ["2841359383"]}