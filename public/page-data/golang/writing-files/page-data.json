{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/writing-files/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"d595ec6e-3832-53f2-838f-72768deb0557","excerpt":"You will see this with a program Here a file is created, . If the file already exists then the contents of the file are truncated.  is used to write theâ€¦","html":"<p>You will see this with a program</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tf<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Create</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file1.txt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tl<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Write Line one\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\tf<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> <span class=\"token string\">\"bytes written\"</span><span class=\"token punctuation\">)</span>\n\terr <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here a file is created, <code class=\"language-text\">test.txt</code>.</p>\n<p>If the file already exists then the contents of the file are truncated. <code class=\"language-text\">Writeline()</code> is used to write the contents to the file.</p>\n<p>After that, You closed the file using <code class=\"language-text\">Close()</code>.</p>","frontmatter":{"title":"Writing Files","date":"November 03, 2021","description":"Writing Files in Go?"}},"previous":{"fields":{"slug":"/golang/reading-files/"},"frontmatter":{"title":"Reading Files"}},"next":{"fields":{"slug":"/javascript/"},"frontmatter":{"title":"JavaScript Tour"}}},"pageContext":{"id":"d595ec6e-3832-53f2-838f-72768deb0557","previousPostId":"50e884de-95b9-5d43-8d5e-b495ecc4eb04","nextPostId":"5e0a4a5f-f4bf-5d9d-b016-c6859fc189b6"}},
    "staticQueryHashes": ["2841359383"]}