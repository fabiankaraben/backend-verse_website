{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/methods/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"4551d8ff-6e8e-59b9-b509-c4f9ba6bf37c","excerpt":"A method is a function with a receiver argument. Architecturally, it’s between the func keyword and method name. The syntax of a method is Go is not an object…","html":"<p>A method is a function with a receiver argument. Architecturally, it’s between the func keyword and method name.</p>\n<p>The syntax of a method is</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">\"fmt\"</span>\n\n<span class=\"token comment\">// Declared the structure named emp</span>\n<span class=\"token keyword\">type</span> emp <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tname    <span class=\"token builtin\">string</span>\n\taddress <span class=\"token builtin\">string</span>\n\tage     <span class=\"token builtin\">int</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// Declaring a function with receiver of the type emp</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>e emp<span class=\"token punctuation\">)</span> <span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Declaring a variable of type emp</span>\n\t<span class=\"token keyword\">var</span> empdata1 emp\n\n\t<span class=\"token comment\">// Assign values to membersempdata1.name = \"John\"</span>\n\tempdata1<span class=\"token punctuation\">.</span>address <span class=\"token operator\">=</span> <span class=\"token string\">\"Street-1, London\"</span>\n\tempdata1<span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> <span class=\"token number\">30</span>\n\n\t<span class=\"token comment\">// Declaring a variable of type emp and assign values to members</span>\n\tempdata2 <span class=\"token operator\">:=</span> emp<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"Sam\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Building-1, Paris\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">//Invoking the method using the receiver of the type emp</span>\n\t<span class=\"token comment\">// syntax is variable.methodname()</span>\n\tempdata1<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tempdata2<span class=\"token punctuation\">.</span><span class=\"token function\">display</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Go is not an object oriented language and it doesn’t have the concept of class.</p>\n<p>Methods give a feel of what you do in object oriented programs where the functions of a class are invoked using the syntax <code class=\"language-text\">objectname.functionname()</code>.</p>","frontmatter":{"title":"Methods","date":"November 03, 2021","description":"Methods in Go?"}},"previous":{"fields":{"slug":"/golang/structures/"},"frontmatter":{"title":"Structures"}},"next":{"fields":{"slug":"/golang/concurrency/"},"frontmatter":{"title":"Concurrency"}}},"pageContext":{"id":"4551d8ff-6e8e-59b9-b509-c4f9ba6bf37c","previousPostId":"064084d4-5b52-5ed8-aff8-7ac3da588f0a","nextPostId":"040bfee7-8a68-5f5d-9e34-d53ca34f7c7d"}},
    "staticQueryHashes": ["2841359383"]}