{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/error-handling/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"229fe90f-cf94-566f-b977-dc81ace1f803","excerpt":"Errors are abnormal conditions like closing a file which is not opened, open a file which doesn’t exist, etc. Functions usually return errors as the last return…","html":"<p>Errors are abnormal conditions like closing a file which is not opened, open a file which doesn’t exist, etc. Functions usually return errors as the last return value.</p>\n<p>The below example explains more about the error.</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Function accepts a filename and tries to open it.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">fileopen</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tf<span class=\"token punctuation\">,</span> er <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// er will be nil if the file exists else it returns an error object</span>\n\t<span class=\"token keyword\">if</span> er <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>er<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">return</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file opened\"</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">fileopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"invalid.txt\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The output will be:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">open /invalid.txt: no such file or directory.</code></pre></div>\n<p>Here we tried to open a non-existing file, and it returned the error to er variable. If the file is valid, then the error will be null.</p>","frontmatter":{"title":"Error Handling","date":"November 03, 2021","description":"Error Handling in Go?"}},"previous":{"fields":{"slug":"/golang/mutex/"},"frontmatter":{"title":"Mutex"}},"next":{"fields":{"slug":"/golang/custom-errors/"},"frontmatter":{"title":"Custom Errors"}}},"pageContext":{"id":"229fe90f-cf94-566f-b977-dc81ace1f803","previousPostId":"6795bce4-f879-5313-8f9f-57a5a8d2184f","nextPostId":"518a15d1-b36e-51c5-83c0-b3eea24b13c2"}},
    "staticQueryHashes": ["2841359383"]}