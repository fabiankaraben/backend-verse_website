{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/golang/custom-errors/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Backend-Verse"}},"markdownRemark":{"id":"518a15d1-b36e-51c5-83c0-b3eea24b13c2","excerpt":"Using this feature, you can create custom errors. This is done by using  of error package. We will rewrite the above program to make use of custom errors. Runâ€¦","html":"<p>Using this feature, you can create custom errors. This is done by using <code class=\"language-text\">New()</code> of error package.</p>\n<p>We will rewrite the above program to make use of custom errors.</p>\n<p>Run the below program</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"errors\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"os\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Function accepts a filename and tries to open it.</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">fileopen</span><span class=\"token punctuation\">(</span>name <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tf<span class=\"token punctuation\">,</span> er <span class=\"token operator\">:=</span> os<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// er will be nil if the file exists else it returns an error object</span>\n\t<span class=\"token keyword\">if</span> er <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// Created a new error object and returns it</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> errors<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Custom error message: File name is wrong\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">Name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// Receives custom error or nil after trying to open the file</span>\n\tfilename<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span> <span class=\"token operator\">:=</span> <span class=\"token function\">fileopen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"invalid.txt\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token builtin\">error</span> <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"file opened\"</span><span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The output will be:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Custom error message:File name is wrong</code></pre></div>\n<p>Here the area() returns the area of a square. If the input is less than 1 then area() returns an error message.</p>","frontmatter":{"title":"Custom Errors","date":"November 03, 2021","description":"Custom Errors in Go?"}},"previous":{"fields":{"slug":"/golang/error-handling/"},"frontmatter":{"title":"Error Handling"}},"next":{"fields":{"slug":"/golang/reading-files/"},"frontmatter":{"title":"Reading Files"}}},"pageContext":{"id":"518a15d1-b36e-51c5-83c0-b3eea24b13c2","previousPostId":"229fe90f-cf94-566f-b977-dc81ace1f803","nextPostId":"50e884de-95b9-5d43-8d5e-b495ecc4eb04"}},
    "staticQueryHashes": ["2841359383"]}